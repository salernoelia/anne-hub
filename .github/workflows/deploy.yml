name: Deploy to Raspberry Pi

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: sudo docker build -t anne-hub .

     - name: Update to the latest migrations
      run: |
        # Assign secrets to variables
        DB_USERNAME="${{ secrets.DB_USERNAME }}"
        DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
        DB_HOST="${{ secrets.DB_HOST }}"
        DB_PORT="${{ secrets.DB_PORT }}"
        DB_NAME="${{ secrets.DB_NAME }}"
        DB_SSLMODE="${{ secrets.DB_SSLMODE }}"
    
        # Trim any whitespace or newlines
        DB_USERNAME="$(echo -n "$DB_USERNAME" | tr -d '\r\n')"
        DB_PASSWORD="$(echo -n "$DB_PASSWORD" | tr -d '\r\n')"
        DB_HOST="$(echo -n "$DB_HOST" | tr -d '\r\n')"
        DB_PORT="$(echo -n "$DB_PORT" | tr -d '\r\n')"
        DB_NAME="$(echo -n "$DB_NAME" | tr -d '\r\n')"
        DB_SSLMODE="$(echo -n "$DB_SSLMODE" | tr -d '\r\n')"
    
        # Run the migrate command
        migrate -database "postgresql://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSLMODE}" -path db/migrations up



      - name: Stop Existing Container
        run: |
          sudo docker stop anne-hub || true
          sudo docker rm anne-hub || true

      - name: Run Docker Container
        run: |
          sudo docker run -d \
            --restart always \
            -e GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
            -e DB_USER="${{ secrets.DB_USERNAME }}" \
            -e DB_PASS="${{ secrets.DB_PASSWORD }}" \
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_PORT="${{ secrets.DB_PORT }}" \
            -e DB_NAME="${{ secrets.DB_NAME }}" \
            -e DB_SSLMODE="${{ secrets.DB_SSLMODE }}" \
            -p 1323:1323 \
            --name anne-hub \
            anne-hub



